{
	"name": "@brikcss/stylelint-config-css",
	"version": "0.1.3",
	"description": "CSS stylelint shareable configuration by brikcss.",
	"author": "The Zimmee <thezimmee@gmail.com>",
	"license": "MIT",
	"homepage": "https://github.com/brikcss/stylelint-config-css",
	"repository": {
		"type": "git",
		"url": "https://github.com/brikcss/stylelint-config-css.git"
	},
	"bugs": {
		"url": "https://github.com/brikcss/stylelint-config-css/issues"
	},
	"keywords": [
		"brikcss",
		"stylelint",
		"stylelintconfig",
		"front end",
		"library",
		"framework",
		"css",
		"js",
		"component",
		"module"
	],
	"main": "index.js",
	"files": [
		"index.js",
		"stylelint.config.js"
	],
	"config": {
		"commitizen": {
			"path": "@commitlint/prompt"
		}
	},
	"scripts": {
		"// [START]": "Run `npm start` as an alias for development.",
		"start": "npm run watch",
		"// [WATCH]": "For local development. Watches files, rebuilds when source files change, runs local server with live reload.",
		"watch": "concurrently --raw \"npm run js:watch\" \"npm run css:watch\"",
		"// [TESTS]": "UI and unit tests, as well as code quality checkers.",
		"pretest": "echo \"Running tests...\n\"",
		"test": "npm prune && npm install && cross-env NODE_ENV=production concurrently --kill-others-on-fail --names=css:lint,js:lint \"npm run css:lint:valid\" \"npm run js:lint\" || npm run test:fail",
		"posttest": "echo \"\n[ok] Tests complete.\n\"",
		"test:fail": "echo \"\n[FAIL] Tests failed.\n\" && exit 1",
		"// [JS]": "// Lint JS files.",
		"js:watch": "chokidar ./*.js --command './node_modules/.bin/eslint {path} --format=stylish && echo \"[ok] JS lint complete.\"'",
		"js:lint": "./node_modules/.bin/eslint ./*.js --format=stylish",
		"// [SASS]": "// Lint SASS files.",
		"css:watch": "npm run css:lint:all && chokidar ./tests/*.css -c 'stylelint {path} && echo \"[ok] CSS lint complete.\"' --verbose",
		"css:lint:all": "stylelint ./tests/*.css",
		"css:lint:valid": "stylelint ./tests/valid.css",
		"// [GIT|HUSKY]": "// Helpers for interacting with git and husky (githooks).",
		"commit": "echo \"See the \"git commit policy\" in CONTRIBUTING.md for details on how to write a valid commit message.\n\" && git-cz",
		"commitmsg": "commitlint -e $GIT_PARAMS",
		"preparecommitmsg": "lib/hooks/prepare-commit-msg.sh ${GIT_PARAMS}",
		"// prepush:": "Runs tests and checks for a clean state (excluding untracked files).",
		"prepush": "npm run git:checkstage && echo \"\nPushing code...\n\"",
		"git:checkstage": ". ./lib/hooks/ensure-clean-stage.sh",
		"// [RELEASE]": "Semantic release manages our release process.",
		"release": "semantic-release pre && npm publish && semantic-release post",
		"semantic-release": "semantic-release pre && npm publish && semantic-release post"
	},
	"release": {
		"branch": "master",
		"analyzeCommits": {
			"preset": "angular",
			"releaseRules": "./.release-rules.js",
			"parserOpts": {
				"noteKeywords": [
					"BREAKING CHANGE",
					"BREAKING CHANGES",
					"BREAKING"
				]
			}
		}
	},
	"publishConfig": {
		"tag": "dev"
	},
	"dependencies": {
		"stylelint": "9.2.1",
		"stylelint-config-recommended": "2.1.0",
		"stylelint-formatter-pretty": "1.0.3"
	},
	"devDependencies": {
		"@brikcss/eslint-config-brikcss": "0.1.2",
		"@commitlint/cli": "7.0.0",
		"@commitlint/prompt": "7.0.0",
		"autoprefixer": "8.6.0",
		"babel-cli": "6.26.0",
		"babel-core": "6.26.3",
		"babel-eslint": "8.2.3",
		"babel-plugin-add-module-exports": "0.2.1",
		"babel-polyfill": "6.26.0",
		"babel-preset-env": "1.7.0",
		"babel-preset-es2015": "6.24.1",
		"chokidar-cli": "1.2.0",
		"commitizen": "2.10.1",
		"concurrently": "3.5.1",
		"cross-env": "5.1.6",
		"eslint": "4.19.1",
		"eslint-loader": "2.0.0",
		"fs-extra": "6.0.1",
		"husky": "0.14.3",
		"postcss": "6.0.22",
		"postcss-cli": "5.0.0",
		"postcss-reporter": "5.0.0",
		"postcss-scss": "1.0.5",
		"semantic-release": "15.5.1"
	}
}
